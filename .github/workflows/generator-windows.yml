name: Custom Windows Client Generator
run-name: Custom Windows Client Generator
on:
  workflow_dispatch:
    inputs:
      server:
        description: 'Rendezvous Server'
        required: true
        default: ''
        type: string
      key:
        description: 'Public Key'
        required: true
        default: ''
        type: string
      apiServer:
        description: 'API Server'
        required: true
        default: 'http://localhost:8000'
        type: string
      custom:
        description: "Custom JSON"
        required: true
        default: ''
        type: string
      uuid:
        description: "uuid of request"
        required: true
        default: ''
        type: string
      iconlink:
        description: "icon link"
        required: false
        default: 'false'
        type: string
      logolink:
        description: "logo link"
        required: false
        default: 'false'
        type: string
      appname:
        description: "app name"
        required: true
        default: 'rustdesk'
        type: string
      filename:
        description: "Filename"
        required: true
        default: 'rustdesk'
        type: string
      extras:
        description: "extra inputs in json"
        required: true
        default: '{}'
        type: string

env:
  # ... alle anderen env Variablen wie gehabt ...
  STATUS_URL: "http://localhost:8000/updategh"

jobs:
  # ... alle jobs wie gehabt ...
  build-for-windows-flutter:
    # ... steps wie gehabt ...
    steps:
      # ... andere Schritte ...
      - name: Set rdgen value
        if: ${{ fromJson(inputs.extras).rdgen == 'true' }}
        run: |
          echo "STATUS_URL=http://localhost:8000/updategh" >> $env:GITHUB_ENV

      - name: Set rdgen value
        if: ${{ fromJson(inputs.extras).rdgen == 'false' }}
        run: |
          echo "STATUS_URL=http://localhost:8000/api/updategh" >> $env:GITHUB_ENV

      # ... Status-Report-Schritte ...
      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        continue-on-error: true
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "5% complete"}'

      # ... weitere Report Status-Schritte, alle mit url: ${{ env.STATUS_URL }} ...

      # ... Datei-Upload zu Server ...
      - name: send file to rdgen server
        if: ${{ fromJson(inputs.extras).rdgen == 'true' }}
        shell: bash
        run: |
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./SignOutput/${{ inputs.filename }}.exe" -F "uuid=${{ inputs.uuid }}" http://localhost:8000/save_custom_client
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./SignOutput/${{ inputs.filename }}.msi" -F "uuid=${{ inputs.uuid }}" http://localhost:8000/save_custom_client || true

      - name: send file to api server
        if: ${{ fromJson(inputs.extras).rdgen == 'false' }}
        shell: bash
        run: |
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./SignOutput/${{ inputs.filename }}.exe" http://localhost:8000/api/save_custom_client
          curl -i -X POST -H "Content-Type: multipart/form-data" -H "Authorization: Bearer ${{ fromJson(inputs.extras).token }}" -F "file=@./SignOutput/${{ inputs.filename }}.msi" http://localhost:8000/api/save_custom_client || true

      # ... alle weiteren Schritte wie gehabt ...

      - name: Report Status
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Success"}'

      - name: failed
        if: failure()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation failed, try again"}'

      - name: failed
        if: cancelled()
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ env.STATUS_URL }}
          method: 'POST'
          customHeaders: '{"Content-Type": "application/json"}'
          data: '{"uuid": "${{ inputs.uuid }}", "status": "Generation cancelled, try again"}'
